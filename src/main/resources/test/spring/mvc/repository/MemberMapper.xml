<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="test.spring.mvc.repository.MemberMapper">
	<insert id="newMember" parameterType="test.spring.mvc.bean.Member_basicDTO">
		insert into Member_basic (id,pw,name,nic,email) values(#{id},#{pw},#{name},#{nic},#{email})
	</insert>
	<insert id="newMemberstatus" >
		insert into authorities values(#{id}, 'ROLE_1')
	</insert>
	<insert id="newMember2" parameterType="test.spring.mvc.bean.Member_detailDTO">
		insert into Member_detail (id,path) values(#{id},#{path})
	</insert>
	<select id="getUserBasic" resultType="test.spring.mvc.bean.Member_basicDTO">
		select * from member_basic where id=#{id}
	</select>
	<select id="getEmailById" >
		select email from member_basic where id=#{id}
	</select>
	<select id="getUser" resultType="Map">
		select * from member_basic b full outer join member_detail d on b.id = d.id where b.id=#{id}  
	</select>
	<update id="modifyMemberBasic" parameterType="test.spring.mvc.bean.Member_basicDTO">
		update member_basic set NAME=#{name}, NIC=#{nic} where id=#{id}
	</update>
	<update id="modifyMemberDetail" parameterType="test.spring.mvc.bean.Member_detailDTO">
		update member_detail set BIRTH=#{birth}, PHONE=#{phone}, GENDER=#{gender},
					 ADDR1=#{addr1}, ADDR2=#{addr2}, POSTNUM=#{postnum} where id=#{id}
	</update>	
	<select id="getPwById">
		select pw from member_basic where id=#{id}
	</select>
	<update id="deleteUserself">
		update member_basic set status=99 where id=#{id}
	</update>
	
	
	
	
	
	
	<select id="registerEmailCheck" resultType="int">
		select count(*) from member_basic where email=#{email}
	</select>
	<select id="registerIdCheck" resultType="int">
		select count(*) from member_basic where id=#{id}
	</select>
	<select id="loginKakao" resultType="test.spring.mvc.bean.Member_basicDTO">
		select id,pw from member_basic where email=#{email}
	</select>
	
	<update id="newPoint" >
		create table ${id}_point(
			num number default ${id}_point_seq.nextval primary key,
			opt number not null,
			change number not null,
			createdate date,
			duedate date,
			orderid varchar2(100),
			point number not null,
			deletedate date
		)
	</update>
	<update id="newPointSeq">
		create sequence ${id}_point_seq nocache
	</update>
	
	<update id="newCoupon">
		create table ${id}_coupon(
			num number default ${id}_coupon_seq.nextval primary key,
			coupon varchar2(100) not null,
			CREATEDATE date not null,
			DELETEDATE date not null,
			STATUS number not null
		)
	</update>
	<update id="newCouponSeq">
		create sequence ${id}_coupon_seq nocache
	</update>
	
	<update id="newDibs">
		create table ${id}_dibs(
			NUM number default ${id}_dibs_seq.nextval primary key,
			PRODUCT varchar2(100) not null,
			FOLDER varchar2(100)
		)
	</update>
	<update id="newDibsSeq">
		create sequence ${id}_dibs_seq nocache
	</update>
	
	<update id="newCart">
		create table ${id}_cart(
			num number default ${id}_cart_seq.nextval primary key,
			product varchar2(100) not null,
			price number not null,
			quantity number not null
		)
	</update>
		<update id="newCartSeq">
		create sequence ${id}_cart_seq nocache
	</update>
	
	<update id="newOrderdetail">
		create table ${id}_Orderdetail(
			ORDERID varchar2(100) not null,
			PRICE number not null,
			QUANTITY number not null,
			DISCOUNT number,
			PURDATE date default sysdate not null,
			PAY varchar2(100) not null,
			PURCHASE number default 0 not null,
			PRODUCTID varchar2(100),
			TRACKING varchar2(100),
			COURIER varchar2(100)
		)
	</update>
	
	<update id="newDelivery">
		create table ${id}_delivery(
			ADDR1 varchar2(100) not null,
			ADDR2 varchar2(100) not null,
			PHONE varchar2(100) not null,
			DEFAULTADDR number default 0,
			NICADDR varchar2(100),
			POSTNUM varchar2(100) NOT NULL,
		)
	</update>
	
	
	<insert id="newemailkey" >
		insert into emailcheck (email, emailkey) values(#{email},#{emailkey})
	</insert>
	<select id="isemailkey" resultType="int">
		select count(*) from emailcheck where email=#{email}
	</select>
	<update id="updateemailkey">
		update emailcheck set emailkey=#{emailkey}, emailauth=0 where email=#{email}
	</update>
	<select id="verifiedemailkey" resultType="int">
		select count(*) from emailcheck where email=#{email} and emailkey=#{emailkey}
	</select>
	<update id="emailAuth">
		update emailcheck set emailauth=1 where email=#{email}
	</update>
	<select  id="isEmailAuth">
		select emailauth from emailcheck where email=#{email}
	</select>
	<select id="getIdByEmail">
		select id from member_basic where email=#{email}
	</select>
	
	<update id="changePwById">
		update member_basic set pw=#{pw} where id=#{id}
	</update>
	<update id="changeEmailById">
		update member_basic set email=#{email} where id=#{id}
	</update>

	
</mapper>