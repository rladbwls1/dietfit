<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- property : 해당 클래스의 set 메서드 호출 -->
		<!-- <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> -->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<!-- 58.73.200.225 192.168.219.123-->
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@58.73.200.225:1521/orcl"/>
		<property name="username" value="final04"/>
		<property name="password" value="final04"/>
	</bean>                                      <!-- 종료될 때 close 란 메서드를 사용하겠다는 뜻 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"/> <!-- 위 id 가 reference 로 들어감 -->
	</bean>		
	
	<!-- mybatis 연결 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/> <!-- 위에 세팅되어있는 dataSource 를 참조 -->
		<property name="configLocation" 
				  value="/WEB-INF/spring/mybatis-config.xml"/>
	</bean>
	
	<!-- 인터페이스까지 읽어줌 -->
	<mybatis-spring:scan base-package="test.spring.mvc.repository"/>
	<!-- 
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	-->
	<tx:annotation-driven/>
	
	<jpa:repositories base-package="test.spring.mvc.repository"/>
	 
	<!-- Hibernate + Jpa 통합하는 작업 -->
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
	<!-- JPA Entity 관리 객체 -->
	<bean id="entityManagerFactory" 
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
	</bean>
	<!-- JPA Transaction 처리 (추가, 수정, 삭제시) -->
	<bean id="transactionManager" 
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

	<!-- mail -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
     	<property name="host" value="smtp.gmail.com" />
     	<!-- google SMTP 메일 서버 포트 -->
     	<property name="port" value="587" /> 
     	
     	<!-- 자신의 메일, 비밀번호 설정 -->
 		<property name="username" value="dietfitdie@gmail.com"/> 
 		<!-- Google의 경우 계정 비밀번호가 아니라 2단계 인증을 거친 후 얻게 되는 16자리 비밀번호로 설정해야 한다-->
 		<property name="password" value="mbeoyyanzgsppied"/> 
 		
 		<!-- 메일 전달 프로토콜 세부 속성 설정 -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	
</beans>
